"use strict";(self.webpackChunkmetaview_docs=self.webpackChunkmetaview_docs||[]).push([[216],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),p=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,k=m["".concat(u,".").concat(c)]||m[c]||s[c]||l;return a?n.createElement(k,o(o({ref:t},d),{},{components:a})):n.createElement(k,o({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4800:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],i={sidebar_position:4},u="API Reference",p={unversionedId:"developers/api-reference",id:"developers/api-reference",title:"API Reference",description:"Metaview has the following functions publically available for anyone to use on any of our supported networks.",source:"@site/docs/developers/api-reference.md",sourceDirName:"developers",slug:"/developers/api-reference",permalink:"/developers/api-reference",editUrl:"https://github.com/metaviewio/metaview-docs/docs/developers/api-reference.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Contract Addresses",permalink:"/developers/contract-addresses"}},d=[{value:"Functions",id:"functions",children:[{value:"getAggregateRating()",id:"getaggregaterating",children:[{value:"Syntax",id:"syntax",children:[],level:4},{value:"Parameters",id:"parameters",children:[],level:4},{value:"Return Value",id:"return-value",children:[],level:4}],level:3},{value:"getRating()",id:"getrating",children:[{value:"Syntax",id:"syntax-1",children:[],level:4},{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Return Value",id:"return-value-1",children:[],level:4}],level:3},{value:"setRating()",id:"setrating",children:[{value:"Syntax",id:"syntax-2",children:[],level:4},{value:"Parameters",id:"parameters-2",children:[],level:4}],level:3},{value:"setBonus()",id:"setbonus",children:[{value:"Syntax",id:"syntax-3",children:[],level:4},{value:"Parameters",id:"parameters-3",children:[],level:4}],level:3}],level:2}],s={toc:d};function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"api-reference"},"API Reference"),(0,l.kt)("p",null,"Metaview has the following functions publically available for anyone to use on any of our supported networks."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"getaggregaterating"},"getAggregateRating()"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getAggregateRating()")," function returns all the rating information for a token."),(0,l.kt)("h4",{id:"syntax"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"metaview.getAggregateRating(token)\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the token to get information about.")))),(0,l.kt)("h4",{id:"return-value"},"Return Value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rating"),(0,l.kt)("td",{parentName:"tr",align:null},"The average rating for the token. Will be 0 if the token has not been rated.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ratingCount"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of accounts that have rated the token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"scamCount"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of accounts that have reported the token to be a scam.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remainingBonuses"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of bonus rewards available.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bonusAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"The bonus reward amount.")))),(0,l.kt)("h3",{id:"getrating"},"getRating()"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"getRating()")," function returns the rating an account gave a token."),(0,l.kt)("h4",{id:"syntax-1"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"metaview.getRating(token, account)\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the token that was rated.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"account"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the account that rated the token.")))),(0,l.kt)("h4",{id:"return-value-1"},"Return Value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rating"),(0,l.kt)("td",{parentName:"tr",align:null},"The rating that the account gave the token.")))),(0,l.kt)("h3",{id:"setrating"},"setRating()"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"setRating()")," function is used to assign a rating to a token for ."),(0,l.kt)("h4",{id:"syntax-2"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"metaview.setRating(token, rating, scam)\n")),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the token to rate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rating"),(0,l.kt)("td",{parentName:"tr",align:null},"The rating to give the token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"scam"),(0,l.kt)("td",{parentName:"tr",align:null},"Set to ",(0,l.kt)("em",{parentName:"td"},"true")," to report that the token is a scam, otherwise set to ",(0,l.kt)("em",{parentName:"td"},"false"),".")))),(0,l.kt)("h3",{id:"setbonus"},"setBonus()"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"setBonus()")," function is used to add a bonus reward for a token."),(0,l.kt)("h4",{id:"syntax-3"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"metaview.setBonus(token, bonusAmount, bonusCount)\n")),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the token to add a bonus for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bonusAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"The bonus amount.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bonusCount"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of bonus rewards to add.")))))}m.isMDXComponent=!0}}]);